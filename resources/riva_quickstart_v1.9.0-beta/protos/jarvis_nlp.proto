// Copyright (c) 2021, NVIDIA CORPORATION.  All rights reserved.
//
// NVIDIA CORPORATION and its licensors retain all intellectual property
// and proprietary rights in and to this software, related documentation
// and any modifications thereto.  Any use, reproduction, disclosure or
// distribution of this software and related documentation without an express
// license agreement from NVIDIA CORPORATION is strictly prohibited.

syntax = "proto3";

package nvidia.jarvis.nlp;

option cc_enable_arenas = true;
option go_package = "nvidia.com/jarvis_speech";

import "jarvis_nlp_core.proto";

// Jarvis NLP Services implement task-specific APIs for popular NLP tasks including
// intent recognition (as well as slot filling), and entity extraction.
service JarvisNLP {
  // AnalyzeEntities accepts an input string and returns all named entities within
  // the text, as well as a category and likelihood.
  rpc AnalyzeEntities(AnalyzeEntitiesRequest) returns (TokenClassResponse) {}

  // AnalyzeIntent accepts an input string and returns the most likely
  // intent as well as slots relevant to that intent.
  //
  // The model requires that a valid "domain" be passed in, and optionally
  // supports including a previous intent classification result to provide
  // context for the model.
  rpc AnalyzeIntent(AnalyzeIntentRequest) returns (AnalyzeIntentResponse) {}

  // PunctuateText takes text with no- or limited- punctuation and returns 
  // the same text with corrected punctuation and capitalization.
  rpc PunctuateText(TextTransformRequest) returns (TextTransformResponse) {}

  // NaturalQuery is a search function that enables querying one or more documents
  // or contexts with a query that is written in natural language.
  rpc NaturalQuery(NaturalQueryRequest) returns (NaturalQueryResponse) {}
}

// AnalyzeIntentContext is reserved for future use when we may send context back in a
// a variety of different formats (including raw neural network hidden states)
message AnalyzeIntentContext {
  // Reserved for future use
}

// AnalyzeIntentOptions is an optional configuration message to be sent as part of
// an AnalyzeIntentRequest with query metadata
message AnalyzeIntentOptions {
  // Optionally provide context from previous interactions to bias the model's prediction
  oneof context {
    string previous_intent = 1;
    AnalyzeIntentContext vectors = 2;
  }
  // Optional domain field. Domain must be supported otherwise an error will be returned.
  // If left blank, a domain detector will be run first and then the query routed to the
  // appropriate intent classifier (if it exists)
  string domain = 3;

  // Optional language field. Assumed to be "en-US" if not specified.
  string lang = 4;
}

// AnalyzeIntentRequest is the input message for the AnalyzeIntent service
message AnalyzeIntentRequest {
  // The string to analyze for intent and slots
  string query = 1;
  // Optional configuration for the request, including providing context from previous turns
  // and hardcoding a domain/language
  AnalyzeIntentOptions options = 2;
}

// AnalyzeIntentResponse is returned by the AnalyzeIntent service, and includes information
// related to the query's intent, (optionally) slot data, and its domain.
message AnalyzeIntentResponse {
  // Intent classification result, including the label and score
  Classification intent = 1;
  // List of tokens explicitly marked as filling a slot relevant to the intent, where the
  // tokens may not exactly match the input (based on the recombined values after tokenization)
  repeated TokenClassValue slots = 2; 
  // Returns the inferred domain for the query if not hardcoded in the request. In the case where
  // the domain was hardcoded in AnalyzeIntentRequest, the returned domain is an exact match to the
  // request. In the case where no domain matches the query, intent and slots will be unset.
  // 
  // DEPRECATED, use Classification domain field.
  string domain_str = 3;

  // Returns the inferred domain for the query if not hardcoded in the request. In the case where
  // the domain was hardcoded in AnalyzeIntentRequest, the returned domain is an exact match to the
  // request. In the case where no domain matches the query, intent and slots will be unset.
  Classification domain = 4;
}

// AnalyzeEntitiesOptions is an optional configuration message to be sent as part of
// an AnalyzeEntitiesRequest with query metadata
message AnalyzeEntitiesOptions {
  // Optional language field. Assumed to be "en-US" if not specified.
  string lang = 4;
}

// AnalyzeEntitiesRequest is the input message for the AnalyzeEntities service
message AnalyzeEntitiesRequest {
  // The string to analyze for intent and slots
  string query = 1;
  // Optional configuration for the request, including providing context from previous turns
  // and hardcoding a domain/language
  AnalyzeEntitiesOptions options = 2;
}

message NaturalQueryRequest {    
  // The natural language query
  string query = 1;

  // Maximum number of answers to return for the query. Defaults to 1 if not set.
  uint32 top_n = 2;

  // Context to search with the above query
  string context = 3;
}

message NaturalQueryResult {
  // text which answers the query
  string answer = 1;
  // Score representing confidence in result
  float score = 2;
}

message NaturalQueryResponse {
  repeated NaturalQueryResult results = 1;
}
